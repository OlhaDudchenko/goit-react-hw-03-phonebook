{"version":3,"sources":["utils/theme.js","components/Section/Section.styled.js","components/Section/Section.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","App.js","index.js"],"names":["theme","Object","freeze","colors","white","BorderColor","InputColor","ButtonColor","animation","time","SectionWrapper","styled","section","SectionTitle","h2","Section","title","children","InputWrapper","div","Input","input","props","FormButton","button","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChangeName","event","currentTarget","value","setState","handleSubmit","preventDefault","newContact","id","onSubmit","reset","this","htmlFor","type","pattern","required","onChange","Component","ContactsList","ul","ContactsListItem","li","ContactsListButton","ContactsListName","p","ContactList","contacts","onDeleteContact","map","onClick","ContactListWrapper","ContactListInput","Filter","App","filter","addContact","find","contact","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContact","normalizeFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.018c40ab.chunk.js","sourcesContent":["export const theme = Object.freeze({\n  colors: {\n    white: \"#ffffff\",\n    BorderColor: \"rgb(255, 222, 173)\",\n    InputColor: \"rgba(255, 248, 220, 0.5)\",\n    ButtonColor: \"rgb(255, 248, 220)\",\n  },\n  animation: \"250ms\",\n  time: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n});\n","import styled from \"@emotion/styled\";\n\nexport const SectionWrapper = styled.section`\n  margin-left: 30px;\n  margin-top: 20px;\n  font-weight: 700;\n`;\nexport const SectionTitle = styled.h2`\n  margin: 0px;\n  margin-bottom: 8px;\n  font-weight: 700;\n  font-size: 28px;\n`;\n","import PropTypes from \"prop-types\";\nimport { SectionWrapper, SectionTitle } from \"./Section.styled\";\n\nexport function Section({ title, children }) {\n  return (\n    <SectionWrapper>\n      {title && <SectionTitle>{title}</SectionTitle>}\n      {children}\n    </SectionWrapper>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from \"@emotion/styled\";\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: 18px;\n`;\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  padding: 5px;\n  font: inherit;\n  font-size: 18px;\n  border-radius: 4px;\n  border: ${(props) => `3px solid ${props.theme.colors.BorderColor}`};\n  background-color: ${(props) => props.theme.colors.InputColor};\n  transition: ${(props) =>\n      `transform${props.theme.colors.animation} ${props.theme.colors.time}`},\n    ${(props) =>\n      `box-shadow${props.theme.colors.animation} ${props.theme.colors.time}`};\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1);\n  }\n`;\nexport const FormButton = styled.button`\n  margin: 0;\n  margin-top: 5px;\n  padding: 5px 10px;\n  font: inherit;\n  border-radius: 4px;\n  font-weight: 700;\n  font-size: 18px;\n  border: ${(props) => `3px solid ${props.theme.colors.BorderColor}`};\n  background-color: ${(props) => props.theme.colors.ButtonColor};\n  cursor: pointer;\n  transition: ${(props) =>\n      `transform${props.theme.animation} ${props.theme.time}`},\n    ${(props) => `box-shadow${props.theme.animation} ${props.theme.time}`};\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1.1);\n  }\n`;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { InputWrapper, Input, FormButton } from \"./ContactForm.styled\";\n\nexport class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  nameInputId = uuidv4();\n\n  numberInputId = uuidv4();\n\n  handleChangeName = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const newContact = { id: uuidv4(), name: name, number: number };\n    this.props.onSubmit(newContact);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: \"\" });\n    this.setState({ number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <InputWrapper>\n          <label htmlFor={this.nameInputId}>Name</label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id={this.nameInputId}\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChangeName}\n          />\n        </InputWrapper>\n        <InputWrapper>\n          <label htmlFor={this.numberInputId}>Number</label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberInputId}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChangeName}\n          />\n        </InputWrapper>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </form>\n    );\n  }\n}\n","import styled from \"@emotion/styled\";\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\nexport const ContactsListItem = styled.li`\n  display: flex;\n  align-items: baseline;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ContactsListButton = styled.button`\n  margin: 0;\n  margin-left: 8px;\n  padding: 3px;\n  width: 80px;\n  font: inherit;\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 18px;\n  border: ${(props) => `3px solid ${props.theme.colors.BorderColor}`};\n  background-color: ${(props) => props.theme.colors.ButtonColor};\n  cursor: pointer;\n  transition: ${(props) =>\n      `transform${props.theme.colors.animation} ${props.theme.colors.time}`},\n    ${(props) =>\n      `box-shadow${props.theme.colors.animation} ${props.theme.colors.time}`};\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1.1);\n  }\n`;\nexport const ContactsListName = styled.p`\n  margin: 0;\n  font-weight: 600;\n  font-size: 18px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ContactsList,\n  ContactsListItem,\n  ContactsListButton,\n  ContactsListName,\n} from \"./ContactList.styled\";\n\nexport function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ContactsList>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ContactsListItem key={id} id={id}>\n            <ContactsListName>\n              {name}: {number}\n            </ContactsListName>\n            <ContactsListButton onClick={() => onDeleteContact(id)}>\n              Delete\n            </ContactsListButton>\n          </ContactsListItem>\n        );\n      })}\n    </ContactsList>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ContactListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n  font-size: 18px;\n`;\nexport const ContactListInput = styled.input`\n  width: 200px;\n  margin: 0;\n  margin-top: 4px;\n  padding: 5px;\n  font: inherit;\n  font-size: 18px;\n  border-radius: 4px;\n  border: ${(props) => `3px solid ${props.theme.colors.BorderColor}`};\n  background-color: ${(props) => props.theme.colors.InputColor};\n  transition: ${(props) =>\n      `transform${props.theme.colors.animation} ${props.theme.colors.time}`},\n    ${(props) =>\n      `box-shadow${props.theme.colors.animation} ${props.theme.colors.time}`};\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1);\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ContactListWrapper, ContactListInput } from \"./Filter.styled\";\n\nexport function Filter({ value, onChange }) {\n  return (\n    <ContactListWrapper>\n      <label>Find contacts by name</label>\n      <ContactListInput type=\"text\" value={value} onChange={onChange} />\n    </ContactListWrapper>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { Section } from \"./components/Section\";\nimport { ContactForm } from \"./components/ContactForm\";\nimport { ContactList } from \"./components/ContactList\";\nimport { Filter } from \"./components/Filter\";\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    const { contacts } = this.state;\n    const filteredContact = contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    filteredContact\n      ? alert(`${newContact.name}is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n  componentDidMount() {\n    // console.log(\"App componentDidMount\")\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    // console.log(parsedContacts)\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const visibleContacts = this.getVisibleContact();\n    const { filter } = this.state;\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { theme } from \"./utils/theme\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}